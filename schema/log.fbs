// schema/log.fbs
// Purpose: Log format used as an optimized custom syslog protocol
// Designed for high-throughput log ingestion with minimal overhead
// Field IDs ensure schema evolution compatibility without breaking changes

include "common.fbs";

namespace schema.log;

/// Log severity levels (RFC 5424 syslog standard + TRACE)
/// Using uint8 for optimal memory usage and cache efficiency
enum LogLevel:uint8 {
    EMERGENCY = 0,    // System is unusable
    ALERT = 1,        // Action must be taken immediately
    CRITICAL = 2,     // Critical conditions
    ERROR = 3,        // Error conditions
    WARNING = 4,      // Warning conditions
    NOTICE = 5,       // Normal but significant condition
    INFO = 6,         // Informational messages
    DEBUG = 7,        // Debug-level messages
    TRACE = 8         // Detailed tracing information
}

/// Log-specific event types
/// Optimized to uint8 since we only have a few types (was uint32)
/// Used for routing and processing pipeline decisions
enum LogEventType:uint8 {
    UNKNOWN = 0,     // Default/unspecified log type
    LOG = 1,         // Standard log collection (renamed from COLLECT for clarity)
    ENRICH = 2       // Log enrichment/annotation
}

/// Single log entry in the system
/// Field IDs allow optimal memory layout and schema evolution
/// Ordered for cache efficiency: larger fields first, smaller fields grouped
table LogEntry {
    context_id:uint64 (id: 0);          // Session/transaction ID for correlation and filtering
    timestamp:uint64 (id: 1);           // Source-generated timestamp (milliseconds since epoch)
    source:string (id: 2);              // Source hostname/instance
    service:string (id: 3);             // Service/application name
    payload:[ubyte] (id: 4);            // Structured data as bytes
    event_type:LogEventType (id: 5);    // Log event type - primary field for routing
    level:LogLevel (id: 6);             // Severity level
}

/// Log data container (goes in Batch.data)
/// Contains batched log entries for efficient network transport
table LogData {
    logs:[LogEntry] (required);
}

root_type LogData;
